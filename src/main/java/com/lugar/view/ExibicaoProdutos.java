/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.lugar.view;

import com.lugar.controller.Conexao;
import com.lugar.model.Usuario;
import com.lugar.model.ProdutosTableModel;
import com.lugar.model.Produto;
import com.lugar.view.cliente.AdicaoProdutoCarrinho;
import com.lugar.view.funcionario.CadastroProduto;
import com.lugar.view.funcionario.EdicaoEstoqueProduto;
import com.lugar.view.funcionario.EdicaoProduto;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JTable;

/**
 *
 * @author lugar
 */
public class ExibicaoProdutos extends javax.swing.JFrame {

    private Usuario usuario;
    private ProdutosTableModel modeloTabela;

    /**
     * Creates new form TabelaProdutos
     */
    public ExibicaoProdutos() {
        initComponents();
    }

    public ExibicaoProdutos(Usuario usuario) {
        this.usuario = usuario;

        initComponents();

        if (usuario.isAdmin()) {
            tabelaProdutos.addMouseListener(new MouseAdapter() {
                @Override
                public void mousePressed(MouseEvent mouseEvent) {
                    JTable tabela = (JTable) mouseEvent.getSource();
                    Point ponto = mouseEvent.getPoint();
                    int linha = tabela.rowAtPoint(ponto);
                    int coluna = tabela.columnAtPoint(ponto);
                    // Clique duplo
                    if (mouseEvent.getClickCount() == 2 && tabela.getSelectedRow() != -1) {
                        if (coluna == 3) {
                            // Tela de estoque
                            chamaTelaEdicaoEstoque((int) modeloTabela.getValueAt(linha, 0));
                        } else {
                            // Tela de edição
                            chamaTelaEdicao((int) modeloTabela.getValueAt(linha, 0));
                        }
                    }
                }
            });
        } else {
            tabelaProdutos.addMouseListener(new MouseAdapter() {
                @Override
                public void mousePressed(MouseEvent mouseEvent) {
                    JTable tabela = (JTable) mouseEvent.getSource();
                    Point ponto = mouseEvent.getPoint();
                    int linha = tabela.rowAtPoint(ponto);
                    int coluna = tabela.columnAtPoint(ponto);
                    // Clique duplo
                    if (mouseEvent.getClickCount() == 2 && tabela.getSelectedRow() != -1) {
                        chamaTelaAdicaoProdutoCarrinho((int) modeloTabela.getValueAt(linha, 0));
                    }
                }
            });
        }
    }

    private void chamaTelaEdicaoEstoque(int id) {
        EdicaoEstoqueProduto edicaoEstoqueProduto = new EdicaoEstoqueProduto(this, true, id);
        edicaoEstoqueProduto.setVisible(true);
        tabelaProdutos.setModel(criaModeloTabela());
    }

    private void chamaTelaEdicao(int id) {
        EdicaoProduto edicaoProduto = new EdicaoProduto(this, true, id);
        edicaoProduto.setVisible(true);
        tabelaProdutos.setModel(criaModeloTabela());
    }

    private void chamaTelaAdicaoProdutoCarrinho(int id) {
        Conexao conexao = new Conexao();
        Produto produto = conexao.buscaProduto(id);
        AdicaoProdutoCarrinho adicaoProdutoCarrinho = new AdicaoProdutoCarrinho(this, true, produto);
        adicaoProdutoCarrinho.setVisible(true);
        int quantidadeComprada = adicaoProdutoCarrinho.getQuantidade();
        System.out.println(quantidadeComprada);
        tabelaProdutos.setModel(criaModeloTabela());
    }

    private ProdutosTableModel criaModeloTabela() {
        Conexao conexao = new Conexao();
        List<Produto> listaProdutos = conexao.buscaTodosProdutos();
        this.modeloTabela = new ProdutosTableModel(listaProdutos);
        return modeloTabela;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelTabela = new javax.swing.JPanel();
        painelRolavelTabela = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        barraMenu = new javax.swing.JMenuBar();
        menuProdutos = new javax.swing.JMenu();
        itemMenuAdicionarProduto = new javax.swing.JMenuItem();
        menuPedidos = new javax.swing.JMenu();
        itemMenuCarrinho = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vitrine");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        tabelaProdutos.setModel(this.criaModeloTabela());
        painelRolavelTabela.setViewportView(tabelaProdutos);

        javax.swing.GroupLayout painelTabelaLayout = new javax.swing.GroupLayout(painelTabela);
        painelTabela.setLayout(painelTabelaLayout);
        painelTabelaLayout.setHorizontalGroup(
            painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTabelaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelRolavelTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelTabelaLayout.setVerticalGroup(
            painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTabelaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelRolavelTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(painelTabela, new java.awt.GridBagConstraints());

        menuProdutos.setText("Produtos");

        if(usuario.isAdmin()){
            itemMenuAdicionarProduto.setText("Adicionar produto");
            itemMenuAdicionarProduto.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    itemMenuAdicionarProdutoActionPerformed(evt);
                }
            });
            menuProdutos.add(itemMenuAdicionarProduto);
        }

        barraMenu.add(menuProdutos);

        menuPedidos.setText("Pedidos");

        if(!usuario.isAdmin()){
            itemMenuCarrinho.setText("Carrinho");
            itemMenuCarrinho.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    itemMenuCarrinhoActionPerformed(evt);
                }
            });
            menuPedidos.add(itemMenuCarrinho);
        }

        barraMenu.add(menuPedidos);

        setJMenuBar(barraMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemMenuAdicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuAdicionarProdutoActionPerformed
        CadastroProduto cadastroProduto = new CadastroProduto(this, true);
        cadastroProduto.setVisible(true);
        tabelaProdutos.setModel(this.criaModeloTabela());
    }//GEN-LAST:event_itemMenuAdicionarProdutoActionPerformed

    private void itemMenuCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuCarrinhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemMenuCarrinhoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExibicaoProdutos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExibicaoProdutos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExibicaoProdutos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExibicaoProdutos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExibicaoProdutos().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JMenuItem itemMenuAdicionarProduto;
    private javax.swing.JMenuItem itemMenuCarrinho;
    private javax.swing.JMenu menuPedidos;
    private javax.swing.JMenu menuProdutos;
    private javax.swing.JScrollPane painelRolavelTabela;
    private javax.swing.JPanel painelTabela;
    private javax.swing.JTable tabelaProdutos;
    // End of variables declaration//GEN-END:variables
}
